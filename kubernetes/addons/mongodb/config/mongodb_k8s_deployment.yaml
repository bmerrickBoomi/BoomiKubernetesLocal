apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-{{port}}
  namespace: addons-mongodb-{{port}}
  labels:
    app.kubernetes.io/name: mongodb-{{port}}
spec:
  serviceName: mongodb-{{port}}
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-{{port}}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-{{port}}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - image: mongo:5.0.6
        name: mongodb-{{port}}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 27017
          name: mongodb-{{port}}
        volumeMounts:
        - mountPath: /data/db
          name: mongodb-{{port}}-storage
      - image: mongo-express:0.54
        name: express-{{port}}
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          value: root
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: password
        - name: ME_CONFIG_MONGODB_SERVER
          value: mongodb-{{port}}.addons-mongodb-{{port}}.svc.cluster.local
        - name: ME_CONFIG_BASICAUTH_USERNAME
          value: admin
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          value: q
        - name: ME_CONFIG_MONGODB_PORT
          value: "27017"
        - name: ME_CONFIG_SITE_BASEURL
          value: /addons/mongo
        ports:
        - containerPort: 8081
          name: express-{{port}}
      volumes:
      - name: mongodb-{{port}}-storage
        persistentVolumeClaim:
          claimName: mongodb-{{port}}-claim
      
          
