apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-{{port}}-config
  namespace: addons-mysql-{{port}}
data:
  my.custom.conf: |
    [mysqld]
    bind-address=0.0.0.0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-{{port}}
  namespace: addons-mysql-{{port}}
  labels:
    app.kubernetes.io/name: mysql-{{port}}
spec:
  serviceName: mysql-{{port}}
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql-{{port}}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql-{{port}}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - image: mysql:8.0
        name: mysql-{{port}}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: user
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: demo
        ports:
        - containerPort: 3306
          name: tcp-mysql-{{port}}
        volumeMounts:
        - name: mysql-{{port}}-config
          mountPath: /etc/mysql/conf.d/custom.my.cnf
          subPath: custom.my.cnf
        - mountPath: /var/lib/mysql
          name: mysql-{{port}}-storage
      volumes:
      - name: mysql-{{port}}-config
        configMap:
          name: mysql-{{port}}-config
      - name: mysql-{{port}}-storage
        persistentVolumeClaim:
          claimName: mysql-{{port}}-claim
